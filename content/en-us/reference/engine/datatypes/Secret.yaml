name: Secret
type: datatype
summary: |
  Stores secret non-printable content.
description: |
  The `Datatype.Secret` data type stores the secret content returned by
  `Class.HttpService:GetSecret()`. It cannot be printed or logged, but can be
  modified using built-in functions, as demonstrated by the code block below.

  ```lua
  local HttpService = game:GetService("HttpService")

  local mySiteApiKey = HttpService:GetSecret("my_site")
  local url = "https://apis.mysite.com?apiKey="
  local urlWithKey = mySiteApiKey:AddPrefix(url)
  local params = "&request=join&user=myname"
  local resultingUrl = urlWithKey:AddSuffix(params)
  ```
code_samples:
tags: []
deprecation_message: ''
constructors: []
constants: []
properties: []
methods:
  - name: Secret:AddPrefix
    summary: |
      Prepends a string to the secret content.
    description: |
      Returns a secret formed by concatenating the supplied string to the secret
      content, for example prepending `"Bearer"` to the API key.

      ```lua
      local HttpService = game:GetService("HttpService")

      local secret = HttpService:GetSecret("yelp")
      local authHeader = secret:AddPrefix("Bearer ")
      ```
    parameters:
      - name: prefix
        type: string
        default:
        summary: ''
    returns:
      - type: Secret
        summary: ''
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Secret:AddSuffix
    summary: |
      Appends a string to the secret content.
    description: |
      Returns a secret formed by concatenating the original secret and the
      supplied string parameter. Useful when creating a URL containing a key and additional query parameters.

      ```lua
      local HttpService = game:GetService("HttpService")

      local apiKey = HttpService:GetSecret("api")

      local url = "https://examplesite.com?apiKey="
      local urlWithKey = apiKey:AddPrefix(url)
      
      local queryParams = "&query1=" .. query1 .. "&query2=" .. query2
      local querySecret = urlWithKey:AddSuffix(queryParams)
      ```
    parameters:
      - name: suffix
        type: string
        default:
        summary: ''
    returns:
      - type: Secret
        summary: ''
    code_samples: []
    tags: []
    deprecation_message: ''
functions:
math_operations:
